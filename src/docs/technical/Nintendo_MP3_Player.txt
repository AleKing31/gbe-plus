Nintendo MP3 Player Technical Documentation 0.1
October 30, 2023
Shonumi aka D.S. Baxter


***************************************************
1. Introduction
*************************************************** 

Following in the footsteps of the original Play-Yan and Play-Yan Micro, the Nintendo MP3 Player was launched in Europe on December 8, 2006. This unique cartridge was very similar to other products in the AGS-006 lineup. Now, however, the device played MP3 music files exclusively, getting rid of any video playback components. Due to this change, the underlying hardware and software had significant differences from the earlier Play-Yans.


***************************************************
2. General Hardware Information
***************************************************

- Features a normal-sized SD card reader.
- Can handle card capacities up to 2GB, depending on the manufacturer.
- Not compatible with SDHC, SDXC, or SDUC cards.
- Uses hardware decoding. Not an Alpha Mosaic VC01 like previous Play-Yan models.
- Uploads firmware on boot, and can optionally update with the correct files on an SD card.
- Features a slightly larger than normal cartridge shell.
- Has a 3.5mm audio jack to output sound and bypass the GBA's speakers.
- Can parse some ID3 tags (ID3v1, ID3v1.1, ID3v2, and mixed ID3v1/ID3v2 tags).
- Supports MP3 bits rates of 32k to 320k bps, CBR, VBR, and ABR.
- Supports sampling frequencies of 8KHz to 48KHz.


***************************************************
3. Hardware Registers
***************************************************

The Nintendo MP3 Player uses a very small selection of registers in the 0xE000000 memory region, relying on serial reads and writes to access firmware, send commands, and handle audio playback.

----------------------------------------------------------------------------------------------------------------------
Hardware Register	|  Address	| Description
----------------------------------------------------------------------------------------------------------------------
NMP_CONTROL		| 0xE000000	| Control register used to issue commands and send data to the cartridge.
NMP_DATA_IN		| 0xE004000 	| Input data for the cartridge.
NMP_DATA_OUT		| 0xE006000	| Output data from the cartridge.
NMP_PARAMETER		| 0xE008000	| Selects data indices and commands.
----------------------------------------------------------------------------------------------------------------------

All registers are 16-bit and MSB first. As such, care must be taken when reading/writing with hardware that is LSB-based (such as the GBA's ARM7 CPU). Additionally, due to the serial nature of the registers, the lower value must always be read/written first. The NMP's software, resorts to accessing these registers one byte at a time (e.g. 0xE000000 first, then 0xE000001) to resolve both issues.


***************************************************
4. Accessing Firmware
***************************************************

Like the original Play-Yan and Play-Yan Micro, the NMP loads default firmware from the cartridge's ROM onto special hardware inside the device. This ensures a baseline, working version of the firmware necessary to decode MP3s is always present, especially in case a firmware upgrade goes awry. To write firmware, the software first sets an index, presumably representing a location in internal memory where the firmware resides. Afterwards, it starts writing values. The index itself is expressed in terms of 16-bit units, so the absolute memory location is twice the value of the index.

The following process is used to access firmware:

------------------------------------------------------------------------
NMP_CONTROL_LO = 0x10
NMP_CONTROL_HI = 0x10

NMP_PARAMATER_LO = INPUT_PARAMETER_HI
NMP_PARAMETER_HI = INPUT_PARAMETER_LO

NMP_CONTROL_LO = 0x00
NMP_CONTROL_HI = 0x00

NMP_PARAMATER_LO = INDEX_HI
NMP_PARAMETER_HI = INDEX_LO
------------------------------------------------------------------------

From there, data can be read or written by from either NMP_DATA_IN or NMP_DATA_OUT as 16-bit values. It is currently unknown what purpose the different values of INPUT_PARAMETER serves. Common values appear to be 0x0000 through 0x0003.

Although the Nintendo MP3 Player has the ability to update its firmware just like its Play-Yan predecessors, it's unclear if this was actually ever done for this version. The cartridge specifically looks for a file named "meteor.fup", but it does not appear any such file was ever offered to users by Nintendo.

After the firmware is completely loaded from the NMP's ROM, a single Game Pak IRQ is automatically generated, which begins the boot process, very similar to how the Play-Yan models operate.


***************************************************
5. Indices
***************************************************

While most indices appear to be used for accessing firmware, some have other purposes. These are accessed in a similar manner to firmware. Here, however, the value representing INPUT_PARAMATER is always 0x0000:

------------------------------------------------------------------------
NMP_CONTROL_LO = 0x10
NMP_CONTROL_HI = 0x10

NMP_PARAMATER_LO = 0x00
NMP_PARAMETER_HI = 0x00

NMP_CONTROL_LO = 0x00
NMP_CONTROL_HI = 0x00

NMP_PARAMATER_LO = ACCESS_INDEX_HI
NMP_PARAMETER_HI = ACCESS_INDEX_LO
------------------------------------------------------------------------

A list of known indices and their functions follows:

------------------------------------------------------------------------
Index	| Description
------------------------------------------------------------------------
0x0000	| Access SD Card Data
0x00FF	| Data Flush
0x0100	| Get Game Pak IRQ Status Data
0x0101	| Access ID3 Data
0x010F	| Send Command / Get Ticks
0x0110	| Check Cartridge I/O Busy Flag
0x--0-	| Audio Buffer 1
0x--8-	| Audio Buffer 2
------------------------------------------------------------------------

Index 0x0000 : Access SD Card Data
This index is accessed after issuing a command that expects to receive data from the SD card. That data is available at NMP_DATA_OUT.

Index 0x00FF : Data Flush
This index typically accessed after commands are issued. It seems like it's used to flush input data. After accessing this index, 16-bits are written to NMP_DATA_IN, with the value being 0x0000

Index 0x0100 : Get Game Pak IRQ Status Data
This index is accessed immediately following a Game Pak IRQ. The NMP's software reads 16 bytes of status data from NMP_DATA_OUT related to the recent IRQ. This status data contains the Command ID associated with the IRQ as well as any additional parameters for the command. These parameters are used to update various things such as the music trackbar, music timestamp, fast forward/rewind, speed, volume, etc. Typically, the NMP's software will read the first 8 bytes of status data to determine if it's valid, then proceed to read the entire 16 bytes.

Index 0x0101 : Access ID3 Data
This index is access after issuing the 0x0040 command. Data for ID3 tags is available at NMP_DATA_OUT.

Index 0x010F : Send Command / Get Ticks
This index has two uses when writing to NMP_DATA_OUT and when reading from NMP_DATA_IN. When writing, it is used to send a command. A series of 16-bit values are then written to NMP_DATA_OUT. When reading, this access gets the current internal "ticks" from the NMP. A single 16-bit value is read from NMP_DATA_OUT, which is used as a measurement for time-keeping. For the most part, the NMP's software wants to ensure that the hardware is actually running, i.e. the 16-bit ticks values should increase periodically. The software reads it once per-frame and times out several actions if the ticks haven't advanced for a full second (i.e. during the initial boot phase, it will completely reset everything and try re-uploading firmware).

Index 0x0110 : Check Cartridge I/O Busy Flag
This index is accessed immediately following the last access to 0x0100. It's used to get the cartridge's I/O busy status. After accessing this index, a single 16-bit value from NMP_DATA_OUT is read. Any non-zero values indicate that the cartridge is still busy, presumbly with data from a previous Game Pak IRQ. This index can be accessed indefinitely until NMP_DATA_OUT returns zero, at which point additional commands can be issued.

Index 0x--0- : Audio Buffer 1
This index is access after issuing the 0x0050 command and the NMP generates internal Game Pak IRQs with a Command ID that reads 0x8100. The status data for those internal IRQs will have 16-bit values that determine the exact index the NMP will assign for its audio buffers. This value appears arbitrary, so the index may not have a fixed position. The data is available at NMP_DATA_OUT and represents 8-bit samples compatible with the GBA's DMA sound channels. The buffer is split in half, with the first portion requiring access to this index.

Index 0x--8- : Audio Buffer 2
This index is much the same as Audio Buffer 1. Accessing this will pull up the second portion of the audio buffer, which contains 8-bit samples. The only thing different about this index is its location. When the NMP generates internal Game Pak IRQs with 0x8100 as the Command ID, the 16-bit index representing Audio Buffer 1 is OR'ed with the value 0x0080 to get the index of Audio Buffer 2.  

***************************************************
6. Commands
***************************************************

Commands can be sent to the Nintendo MP3 Player after accessing the 0x010F index. Data consists of a stream of 16-bit words written to NMP_DATA_IN. These commands are responsible for operating nearly everything about the cartridge, from upgrading firmware, reading directory information from the SD card, and playing music. The process of sending a command is as follows:

------------------------------------------------------------------------
NMP_DATA_IN_LO = COMMAND_ID_HI
NMP_DATA_IN_HI = COMMAND_ID_LO

NMP_DATA_IN_LO = PARAMETER_VALUE_HI
NMP_DATA_IN_HI = PARAMETER_VALUE_LO

...

NMP_CONTROL_LO = 0x04
NMP_CONTROL_HI = 0x04
------------------------------------------------------------------------

At a minimum, a command must write its ID and an additional 16-bits of parameter data. Some commands, such as 0x10, use zeroes for their parameter data, and do not seem to require a flush via the 0xFF index. For commands that require more bytes for parameters, that data is simply written accordingly to NMP_DATA_IN. Writing 0x0404 to NMP_CONTROL appears to signal to the cartridge that command input is finished. A list of all known commands and details about them are listed below:

----------------------------------------------------------------------------------------------------------------------------------------------
Command	ID				| Parameters				| SD Card Data
----------------------------------------------------------------------------------------------------------------------------------------------
0x0010 - Begin File/Folder List		|					| 1 File/Folder Entry
0x0011 - Continue File/Folder List	|					| 1 File/Folder Entry
0x0020 - Change Directory		| Directory Name			|
0x0030 - Unknown Command		|					|
0x0040 - Grab ID3 Data			| Music Filename			| ID3 Tags For Title and Artist
0x0050 - Play Music File		| Music Filename			|
0x0051 - Stop Music Playback		|					|
0x0052 - Pause Music Playback		|					|
0x0053 - Resume Music Playback		|					|
0x0060 - Seek Forwards/Backwards	|					|
0x0070 - Unknown Command		|					|
0x0080 - Adjust Volume			| New Volume				|
0x0200 - Play Sound Effect		|					|
0x0300 - Check For Firmware File	| Firmware Upgrade Filename		|
0x0301 - Read Firmware File		|					|
0x0303 - Close Firmware File		|					|
0x0500 - Enter Sleep Mode		|					|
0x0501 - Exit Sleep Mode		|					|
----------------------------------------------------------------------------------------------------------------------------------------------

Sometimes the NMP's hardware will generate Game Pak IRQs on its own. While not exactly commands, these IRQs produce data that can be read in much the same way. That is to say, they'll have a Command ID, Status Data, and SD Card Data if applicable.

----------------------------------------------------------------------------------------------------------------------------------------------
Command	ID				| Parameters				| SD Card Data
----------------------------------------------------------------------------------------------------------------------------------------------
0x8001 - Initialize NMP Hardware	|					|
0x8600 - Headphone Status		| Headphone Plugged-In Flag		|
0x8100 - Update Audio			| Audio Buffer / Trackbar / Timestamp	| Audio Samples
----------------------------------------------------------------------------------------------------------------------------------------------

-----------------------------------------------------------------------
Command 0x0010 - Begin File/Folder List
-----------------------------------------------------------------------

Unknown command. Possibly filesystem related.





-----------------------------------------------------------------------
Command 0x0011 - Continue File/Folder List
-----------------------------------------------------------------------

Unknown command. Possibly filesystem related.





-----------------------------------------------------------------------
Command 0x0200 - Play Sound Effect
-----------------------------------------------------------------------

Plays a sound effect during certain actions, such as selecting menus. The sound effect comes from firmware, just like the Play-Yan models, with the Nintendo MP3 Player software loading it and outputting it.





-----------------------------------------------------------------------
Command 0x0300 - Check For Firmware File
-----------------------------------------------------------------------

This command requests a firmware update file from the SD card if it exists. May be similar to the Check For Key File command on the Play-Yan Micro. It seems that if some of the response data is non-zero, that indicates the file is available and can be read.

A total of 522 bytes are used as parameter data. The first portion contains a null-terminated string representing the file to look up. Each character uses 16-bits. As an example, the ASCII encoding for the character "A" involves writing 0x00 to NMP_DATA_IN_LO first, then 0x41 to NMP_DATA_IN_HI later. Some unknown data is used after the filename.





-----------------------------------------------------------------------
Command 0x0301 - Read Firmware File
-----------------------------------------------------------------------

This command appears to read the firmware file if it exists.





-----------------------------------------------------------------------
Command 0x0303 - Close Firmware File
-----------------------------------------------------------------------

This command appears to close the firmware file if it was previously opened.



***************************************************
7. Game Pak IRQs
***************************************************

The Nintendo MP3 Player, like the earlier Play-Yan models, makes extensive use of Game Pak interrupt requests to signal when data is ready from the cartridge. Game Pak IRQs are generally triggered in response to a command sent to the cartridge. One notable exception is the initial Game Pak IRQs that are triggered after the GBA has finished loading firmware from ROM. This appears to occur some time after the CPU writes the value 0x0808 to NMP_CONTROL.

On each Game Pak IRQ, a total of 16 bytes of data are made available when accessing the 0x0100 index. The exact values of Game Pak IRQ data varies depending on what command was recently execute or what the current status of the cartridge is. On a high-level, this mimics much of the same behavior seen in the Play-Yan models, with the key differences being the overall format and the method of accessing such data. Below are the known Game Pak IRQs and the data they require. Scenarios that trigger more than 1 IRQ have the data for each split in their charts.

-----------------------------------------------------------------------
Firmware Initialization - 2 IRQs
-----------------------------------------------------------------------
Bytes 0x00 - 0x01	| 0x8001
Bytes 0x02 - 0x03	| SD Card Status
-----------------------------------------------------------------------
Bytes 0x00 - 0x01	| 0x8600
-----------------------------------------------------------------------

This occurs after firmware has been loaded from ROM and onto the cartridge's special hardware. The primary purpose of the IRQ is to signal to the Nintendo MP3 Player software that the firmware is ready. Additionally, it returns the status of the SD card. Non-zero values indicate various errors.






-----------------------------------------------------------------------
Command 0x0010 - Unknown Command - 1 IRQ
-----------------------------------------------------------------------
Bytes 0x00 - 0x01	| 0x4010
-----------------------------------------------------------------------





-----------------------------------------------------------------------
Command 0x0011 - Unknown Command - 1 IRQ
-----------------------------------------------------------------------
Bytes 0x00 - 0x01	| 0x4011
-----------------------------------------------------------------------





-----------------------------------------------------------------------
Command 0x0300 - Check For Firmware File - 1 IRQ
-----------------------------------------------------------------------
Bytes 0x00 - 0x01	| 0x4300
-----------------------------------------------------------------------





-----------------------------------------------------------------------
Command 0x0301 - Read Firmware File? - 1 IRQ
-----------------------------------------------------------------------
Bytes 0x00 - 0x01	| 0x4301
-----------------------------------------------------------------------





-----------------------------------------------------------------------
Command 0x0302 - Close Firmware File - 1 IRQ
-----------------------------------------------------------------------
Bytes 0x00 - 0x01	| 0x4302
-----------------------------------------------------------------------





For each Game Pak IRQ, the first 16-bits act as a sort of "ID" for the command used. Typically, this ID is simply the command itself OR'ed with 0x4000 or 0x8000. Once again, this has parallels to how the Play-Yans operate. When the ID has been OR'ed with 0x40000000, this means the Nintendo MP3 Player is directly responding to a command issued by the software and generating an appropiate Game Pak IRQ. IDs OR'ed with 0x80000000, on the other hand, represent Game Pak IRQs generated by the Nintendo MP3 Player itself.